parameters:
  SolutionBaseName:
  BuildConfiguration:

jobs:
- job: CodeBuild
  pool:
    name: DAS - Continuous Integration Agents
    workspace:
      clean: all
  variables:
  - group: BUILD Management Resources

  steps:
  - template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks

  - template: azure-pipelines-templates/build/step/app-build.yml@das-platform-building-blocks
    parameters:
      ContinueOnVulnerablePackageScanError: true

  # - task: UseDotNet@2
  #   displayName: Install .NET SDK 8.0
  #   inputs:
  #     packageType: sdk
  #     version: '8.0.x'
  #     includePreview: false

  - task: DotNetCoreCLI@2
    displayName: Restore Dependencies for WebAcceptanceTests
    inputs:
      command: restore
      projects: src/SFA.DAS.FAA.Web.AcceptanceTests/SFA.DAS.FAA.Web.AcceptanceTests.csproj

  - task: DotNetCoreCLI@2
    displayName: Build WebAcceptanceTests
    inputs:
      command: build
      projects: src/SFA.DAS.FAA.Web.AcceptanceTests/SFA.DAS.FAA.Web.AcceptanceTests.csproj
      arguments: '--configuration ${{ parameters.BuildConfiguration }} --output $(build.artifactstagingdirectory)/acceptance-tests'

  - task: DotNetCoreCLI@2
    displayName: Publish WebAcceptanceTests
    inputs:
      command: publish
      projects: src/SFA.DAS.FAA.Web.AcceptanceTests/SFA.DAS.FAA.Web.AcceptanceTests.csproj
      arguments: '--configuration ${{ parameters.BuildConfiguration }} -o $(build.artifactstagingdirectory)/acceptance-tests/output'

  - task: CopyFiles@2
    displayName: Copy Files to $(build.artifactstagingdirectory)/publish
    inputs:
      Contents: |
        azure/**
      TargetFolder: $(build.artifactstagingdirectory)/publish
      OverWrite: true

  - task: DotNetCoreCLI@2
    displayName: Publish - dotnet publish ${{ parameters.SolutionBaseName }}
    inputs:
      command: publish
      publishWebProjects: false
      projects: src/${{ parameters.SolutionBaseName }}.Web/${{ parameters.SolutionBaseName }}.Web.csproj
      arguments: -o $(build.artifactstagingdirectory)/publish -c ${{ parameters.BuildConfiguration }} --no-build
      modifyOutputPath: true
      zipAfterPublish: true

  - task: ArchiveFiles@2
    displayName: Archive Acceptance Test Files
    inputs:
      rootFolderOrFile: '$(build.artifactstagingdirectory)/acceptance-tests/output'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(build.artifactstagingdirectory)/acceptance-tests/SFA.DAS.FAA.Web.AcceptanceTests.zip'

  - task: PublishPipelineArtifact@1
    displayName: Publish Build Artifacts
    inputs:
      targetPath: $(build.artifactstagingdirectory)
      artifactName: ${{ parameters.SolutionBaseName }}
